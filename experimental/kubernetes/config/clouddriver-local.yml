server:
  port: ${services.clouddriver.port:7002}
  address: 0.0.0.0

#circular
#services:
#  front50:
#    baseUrl: ${services.front50.baseUrl:localhost:8080}

redis:
  connection: ${services.redis.connection:redis://localhost:6379}

# Controls whether UserDataProviders are used to populate user data of new server groups.
# If false, user data is copied over from ancestor server groups on both CopyLastAsgAtomicOperation and
# ModifyAsgLaunchConfigurationOperation (only if no user data is provided on the given request).
udf:
  enabled: ${services.clouddriver.aws.udf.enabled:true}

default:
  account:
    env: ${providers.aws.primaryCredentials.name}

aws:
  enabled: false
  defaults:
    iamRole: ${provider.aws.defaultIAMRole:BaseIAMRole}
  defaultRegions:
    - name: ${providers.aws.defaultRegion:us-east-1}
  defaultFront50Template: ${services.front50.baseUrl}

  # Credentials are passed either as environment variables or through
  # a standard AWS file $HOME/.aws/credentials
  # See providers.aws.primaryCredentials in spinnaker.yml for more
  # info on setting environment variables.
  #
  # TODO(ewiseblatt):
  # This only works for root credentials, which you aren't supposed to use.
  # I haven't been able to figure out how to get normal user accounts to work.
  # I'm leaving this broken for now hoping that once this gets mainlined some
  # body else will be able to fix it.

google:
  enabled: false

  accounts:
    - name: ${providers.google.primaryCredentials.name}
      project: ${providers.google.primaryCredentials.project}
      jsonPath: ${providers.google.primaryCredentials.jsonPath}

cf:
  enabled: ${providers.cf.enabled:false}

  accounts:
    - name: false
      api: ${providers.cf.primaryCredentials.api}
      console: ${providers.cf.primaryCredentials.console}
      org: ${providers.cf.defaultOrg}
      space: ${providers.cf.defaultSpace}
      username: ${providers.cf.account.name:}
      password: ${providers.cf.account.password:}

kubernetes:
  enabled: true
  accounts:
    - name: my-kubernetes-account
      namespaces:
        - default
        - spinnaker
      dockerRegistries:
        - accountName: my-docker-account

dockerRegistry:
  enabled: true
  accounts:
    - name: my-docker-account
      address: https://index.docker.io
      repositories:
        - library/nginx
    - name: my-quay-account
      address: https://quay.io
      username: # fill me in
      password: # me too
      email: # me three
      repositories:
        - spinnaker/clouddriver
        - spinnaker/deck
        - spinnaker/echo
        - spinnaker/front50
        - spinnaker/gate
        - spinnaker/igor
        - spinnaker/orca
        - spinnaker/rosco
        - spinnaker/rush

credentials:
  primaryAccountTypes: ${providers.aws.primaryCredentials.name}, ${providers.google.primaryCredentials.name}, ${providers.cf.primaryCredentials.name}
  challengeDestructiveActionsEnvironments: ${providers.aws.primaryCredentials.name}, ${providers.google.primaryCredentials.name}, ${providers.cf.primaryCredentials.name}
