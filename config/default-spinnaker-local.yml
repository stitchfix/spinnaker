# This file is intended to override the default configuration in the spinnaker.yml file.
# In order for Spinnaker to discover it, it must be copied to a file named
# "spinnaker-local.yml" and placed in the $HOME/.spinnaker directory.

providers:
  aws:
    # If you want to deploy some services to Amazon Web Services (AWS),
    # set enabled and provide primary credentials for deploying.
    # Enabling AWS is independent of other providers.
    enabled: true
    defaultRegion: us-east-1
    defaultIAMRole: aa-infrastructure
    primaryCredentials:
      name: stitchfix-aa

  google:
    # If you want to deploy some services to Google Cloud Platform (google),
    # set enabled and provide primary credentials for deploying.
    # Enabling google is independent of other providers.
    enabled: ${SPINNAKER_GOOGLE_ENABLED:false}
    defaultRegion: ${SPINNAKER_GOOGLE_DEFAULT_REGION}
    defaultZone: ${SPINNAKER_GOOGLE_DEFAULT_ZONE}
    primaryCredentials:
      name: my-google-account
      # The project is the Google Project ID for the project to manage with Spinnaker.
      # The jsonPath is a path to the JSON service credentials downloaded from the
      # Google Developer's Console.
      project: ${SPINNAKER_GOOGLE_PROJECT_ID}
      jsonPath: ${SPINNAKER_GOOGLE_PROJECT_CREDENTIALS_PATH:}

  cf:
    # If you want to deploy some services to Cloud Foundry (cf),
    # set enabled and provide primary credentials for deploying.
    # Enabling cf is independent of other providers.
    enabled: false
    defaultOrg: spinnaker-cf-org
    defaultSpace: spinnaker-cf-space
    primaryCredentials:
      name: my-cf-account
      api: my-cf-api-uri
      console: my-cf-console-base-url
    # Either uncomment and plugin credentials here, or supply as environment variables for maximum security
    # account:
    #   name: my-cf-username
    #   password: my-cf-password

  kubernetes:
    # If you want to deploy containers to Kubernetes,
    # set enabled and provide primary credentials for deploying.
    # Enabling kubernetes is dependent on dockerRegistry being enabled.
    enabled: ${SPINNAKER_KUBERNETES_ENABLED:false}
    primaryCredentials:
      # These credentials use authentication information at ~/.kube/config
      # by default.
      name: my-kubernetes-account
      dockerRegistryAccount: ${providers.dockerRegistry.primaryCredentials.name}

  dockerRegistry:
    # If you want to deploy containers to a container management solution,
    # you must specifiy where these container images exist first.
    # Enabling dockerRegistry is independent of other providers.
    enabled: ${SPINNAKER_KUBERNETES_ENABLED:false}
    primaryCredentials:
      name: my-docker-registry-account
      address: https://index.docker.io/
      repository: library/nginx

services:
  gate:
    baseUrl: http://spinnaker.vertigo.stitchfix.com/gate

  rosco:
    baseUrl: http://spinnaker.vertigo.stitchfix.com/rosco

  default:
    # These defaults can be modified to change all the spinnaker subsystems
    # (clouddriver, gate, etc) at once, but not external systems (jenkins, etc).
    # Individual systems can still be overridden using their own section entry
    # directly under 'services'.
    protocol: http    # Assume all spinnaker subsystems are using http
    host: 0.0.0.0
    primaryAccountName: ${providers.google.primaryCredentials.name}

  redis:
    # If you are using a remote redis server, you can set the host here.
    # If the remote server is on a different port or url, you can add
    # a "port" or "baseUrl" field here instead.
    host: spinnaker-prod.umkhnf.0001.use1.cache.amazonaws.com

  cassandra:
    # If you are using a remote cassandra server, you can set the host here.
    # If the remote server is on a different port or url, you can add
    # a "port" or "baseUrl" field here instead. You may also need to set
    # the cluster name. See the main spinnaker.yml file for more attributes.
    host: localhost

  docker:
    # This target repository is used by the bakery to publish baked docker images.
    # Do not include http://.
    targetRepository: # Optional, but expected in spinnaker-local.yml if specified.

  jenkins:
    # If you are integrating Jenkins, set its location here using the baseUrl
    # field and provide the username/password credentials.
    # You must also enable the "igor" service listed separately.
    #
    # If you have multiple jenkins servers, you will need to list
    # them in an igor-local.yml. See jenkins.masters in config/igor.yml.
    #
    # Note that jenkins is not installed with Spinnaker so you must obtain this
    # on your own if you are interested.
    enabled: ${services.igor.enabled:false}
    defaultMaster:
      name: Jenkins # The display name for this server
      baseUrl: http://aa-jenkins.vertigo.stitchfix.com:8080
      username:
      password:

  clouddriver:
    # Controls whether UserDataProviders are used to populate user data of new server groups.
    # If false, user data is copied over from ancestor server groups on both CopyLastAsgAtomicOperation and
    # ModifyAsgLaunchConfigurationOperation (only if no user data is provided on the given request).
    aws:
      udf:
        enabled: true

  igor:
    # If you are integrating Jenkins then you must also enable Spinnaker's
    # "igor" subsystem.
    enabled: true

  deck:
    # Frontend configuration.
    # If you are proxying Spinnaker behind a single host, you may want to
    # override these values. Remember to run `reconfigure_spinnaker.sh` after.
    #baseUrl: http://spinnaker.mydomain.com
    #gateUrl: ${services.deck.baseUrl}/gate
    #bakeryUrl: ${services.deck.baseUrl}/rosco
    timezone: 'America/Los_Angeles' # See: http://momentjs.com/timezone/docs/#/data-utilities/
    auth:
      enabled: false

  rush:
    # Spinnaker's "rush" subsystem is used by the "rosco" bakery.
    # You need to provide the fully-qualified path to the directory containing the packer templates.
    # They typically live in rosco's config/packer directory.
    configDir: /opt/rosco/config/packer
  
  rosco:
    baseUrl: http://spinnaker.vertigo.stitchfix.com/rosco
 
  echo:
    # allow pipeline triggers to run periodically via cron expressions
    cron:
      enabled: true
    # If you wish for spinnaker to send notifications, configure the following blocks
    notifications:
      mail:
        enabled: false
        host: # the smtp host
        fromAddress: #the address for which emails are sent from
      hipchat:
        enabled: false
        url: # the hipchat server to connect to
        token: #the hipchat auth token
      sms:
        enabled: false
        account: # twilio account id
        token: # twilio auth token
        from: # phone number by which sms messages are sent
      # See https://api.slack.com/incoming-webhooks for details about using incoming webhooks
      # and how to register your own webhook.
      slack:
        enabled: false
        token: # the part after http://hooks.slack.com/services/
